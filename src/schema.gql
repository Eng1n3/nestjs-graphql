# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type DocumentEntity {
  idProject: Project!
  idDocument: String!
  documentName: String!
  pathDocument: String!
  description: String!
  createdAt: Date!
}

type Project {
  idUser: String!
  idProject: String!
  projectName: String!
  description: String!
  createdAt: Date!
  updatedAt: Date!
  document: [DocumentEntity!]
}

type User {
  idUser: String!
  username: String!
  email: String!
  fullname: String!
  pathImage: String!
  role: String!
  bio: String!
  homepage: String!
  createdAt: Date!
  updatedAt: Date!
  project: [Project!]
}

type UsersModel {
  count: Int
  data: [User!]!
}

"""Date custom scalar type"""
scalar Date

type Query {
  index: String!
  users(options: GetUserInput): UsersModel!
  totalCount: Float!
  project: String!
}

input GetUserInput {
  pagination: PaginationInput

  """
  {key: "ASC" or "DESC" or "asc" or "desc" or 1 or -1} or {key: {direction: "ASC" or "DESC" or "asc" or "desc", nulls: "first" or "last" or "FIRST" or "LAST"}}}
  """
  sort: JSON
  search: SearchUserInput
}

input PaginationInput {
  """Start from 0"""
  skip: Float = 0

  """default take 10 data"""
  take: Float = 10
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

input SearchUserInput {
  username: String = ""
  email: String = ""
  fullname: String = ""
}

type Mutation {
  createAdmin(input: CreateUserInput!): String!
  createUser(input: CreateUserInput!): String!
  createProject: String!
}

input CreateUserInput {
  username: String!
  email: String!
  password: String!
  repassword: String!
  fullname: String!
  bio: String
  homepage: String
}