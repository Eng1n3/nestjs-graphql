# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type DocumentEntity {
  project: Project!
  idDocument: String!
  documentName: String!
  pathDocument: String!
  description: String!
  createdAt: Date!
}

type Project {
  user: User!
  projectName: String!
  description: String!
  createdAt: Date!
  updatedAt: Date!
  document: [DocumentEntity!]
}

type User {
  idUser: String!
  username: String!
  email: String!
  fullname: String!
  pathImage: String!
  role: String!
  bio: String!
  homepage: String!
  createdAt: Date!
  updatedAt: Date!
  project: [Project!]
}

type UsersModel {
  count: Int
  data: [User!]!
}

type ProjectsAndCountModel {
  count: Int
  data: [Project!]!
}

type DocumentsAndCountModel {
  count: Int
  data: [DocumentEntity!]!
}

type LoginModel {
  token: String!
}

"""Date custom scalar type"""
scalar Date

type Query {
  index: String!
  user: User!
  users(options: GetUserInput): UsersModel!
  countAccountAll: Float!
  countProjectsAll: Float
  countProjectsByUser: Float
  project(options: GetProjectsInput!): ProjectsAndCountModel
  projects(options: GetProjectsInput!): ProjectsAndCountModel
  countDocumentsAll: Float
  countDocumentsByUser: Float
  documents(options: GetDocumentsInput): DocumentsAndCountModel
  document(options: GetDocumentsInput): DocumentsAndCountModel
}

input GetUserInput {
  pagination: PaginationInput

  """
  {key: "ASC" or "DESC" or "asc" or "desc" or 1 or -1} or {key: {direction: "ASC" or "DESC" or "asc" or "desc", nulls: "first" or "last" or "FIRST" or "LAST"}}}
  """
  sort: JSON
  search: SearchUserInput
}

input PaginationInput {
  """Start from 0"""
  skip: Float = 0

  """default take 10 data"""
  take: Float = 10
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

input SearchUserInput {
  username: String = ""
  email: String = ""
  fullname: String = ""
}

input GetProjectsInput {
  pagination: PaginationInput

  """
  {key: "ASC" or "DESC" or "asc" or "desc" or 1 or -1} or {key: {direction: "ASC" or "DESC" or "asc" or "desc", nulls: "first" or "last" or "FIRST" or "LAST"}}}
  """
  sort: JSON
  search: SearchProjectInput
}

input SearchProjectInput {
  projectName: String = ""
  description: String = ""
}

input GetDocumentsInput {
  pagination: PaginationInput

  """
  {key: "ASC" or "DESC" or "asc" or "desc" or 1 or -1} or {key: {direction: "ASC" or "DESC" or "asc" or "desc", nulls: "first" or "last" or "FIRST" or "LAST"}}}
  """
  sort: JSON
  search: SearchDocumentsInput
}

input SearchDocumentsInput {
  documentName: String = ""
  description: String = ""
  pathDocument: String = ""
}

type Mutation {
  deleteUser(idUser: String!): String!
  updateAdmin(input: UpdateAdminInput!): String!
  updateUser(input: UpdateUserInput!): String!
  registerAdmin(input: RegisterAdminInput!): String!
  registerUser(input: RegisterUserInput!): String!
  deleteProject(idProject: String!): String!
  updateProject(input: UpdateProjectInput!): String!
  createProject(input: CreateProjectInput!): String!
  deleteDocument(idDocument: String!): String!
  updateDocument(input: UpdateDocumentInput!): String!
  uploadDocument(input: UploadDocumentInput!): String!
  changePassword(input: ChangePasswordInput!): String!
  forgotAdmin(usernameOrEmail: String!): String!
  forgotUser(usernameOrEmail: String!): String!
  loginAdmin(usernameOrEmail: String!, password: String!): LoginModel!
  loginUser(usernameOrEmail: String!, password: String!): LoginModel!
}

input UpdateAdminInput {
  username: String
  email: String
  password: String
  repassword: String
  image: Upload
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input UpdateUserInput {
  username: String
  email: String
  password: String
  repassword: String
  fullname: String
  bio: String
  homepage: String
  image: Upload
}

input RegisterAdminInput {
  username: String!
  email: String!
  password: String!
  repassword: String!
  image: Upload
}

input RegisterUserInput {
  username: String!
  email: String!
  password: String!
  repassword: String!
  fullname: String!
  bio: String
  homepage: String
  image: Upload
}

input UpdateProjectInput {
  projectName: String
  description: String
  idProject: String!
}

input CreateProjectInput {
  projectName: String!
  description: String!
}

input UpdateDocumentInput {
  idProject: String
  documentName: String
  description: String
  file: Upload
  idDocument: String!
}

input UploadDocumentInput {
  idProject: String!
  documentName: String!
  description: String!
  file: Upload!
}

input ChangePasswordInput {
  password: String!
  repassword: String!
}